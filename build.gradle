plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '2.0.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
}

group = 'com.rubinskyi'
version = '1.3-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-dependencies:2.0.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.apache.commons:commons-lang3'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'

    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile(group: 'net.sourceforge.tess4j', name: 'tess4j', version: '4.3.1') {
        exclude group: 'org.slf4j', module: 'jcl-over-slf4j'
        exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
        exclude group: 'log4j', module: 'log4j'
        exclude group: 'org.jboss.logging', module: 'jboss-logging'
        exclude group: 'commons-logging', module: 'commons-logging'
    }

    compileOnly 'org.projectlombok:lombok:1.18.4'
    testCompile 'org.projectlombok:lombok:1.18.4'
    annotationProcessor 'org.projectlombok:lombok:1.18.4'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.4'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompile('org.dbunit:dbunit:2.5.3') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
        exclude group: 'junit', module: 'junit'
    }
    testCompile 'com.github.springtestdbunit:spring-test-dbunit:1.3.0'

    components {
        withModule('org.springframework:spring-beans') {
            allVariants {
                withDependencyConstraints {
                    it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.19' } }
                }
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
